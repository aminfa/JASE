# All Java methods made available through this server
# Syntax is: <class name>::<method name>
# For the constructor, use <class name>::__construct

# You can specify an output map for your methods that adopt changes to inputs through call-by-reference
# That is, you can send the (modified version of an) input as an output of the method.
# This can be used to circumvent the problem that call-by-reference changes are not propagated to the caller.
# To use this functionality, define a map of the form {out=ik} where k is the number of the input used as output (k >= 1)

Catalano.Imaging.Filters.Crop::__construct
Catalano.Imaging.Filters.Crop::ApplyInPlace					{out=i1}
Catalano.Imaging.Filters.Resize::__construct
Catalano.Imaging.Filters.Resize::applyInPlace				{out=i1}
weka.classifiers.lazy.IBk::__construct
weka.classifiers.lazy.IBk::buildClassifier
weka.classifiers.lazy.IBk::classifyInstance
weka.classifiers.trees.J48::__construct
weka.classifiers.trees.J48::buildClassifier
weka.classifiers.trees.J48::classifyInstance
weka.classifiers.trees.RandomTree::__construct
weka.classifiers.trees.RandomTree::buildClassifier
weka.classifiers.trees.RandomTree::classifyInstance
weka.classifiers.trees.RandomForest::__construct
weka.classifiers.trees.RandomForest::buildClassifier
weka.classifiers.trees.RandomForest::classifyInstance
de.upb.crc901.services.wrappers.WekaClassifierWrapper::__construct
de.upb.crc901.services.wrappers.WekaClassifierWrapper::predict
de.upb.crc901.services.wrappers.WekaClassifierWrapper::train
de.upb.crc901.services.wrappers.WekaClassifierWrapper::predict_and_score